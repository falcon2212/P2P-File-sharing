{"version":3,"sources":["components/Header.js","components/Home.js","components/Authors.js","components/About.js","components/Login.js","components/SignUp.js","components/Dashboard.js","components/RoomSelect.js","components/DeviceSelection.js","components/Middle.js","App.js","Tmp.js","index.js","config/app_config.js"],"names":["Header","this","props","login_data","logged_in","Navbar","bg","variant","expand","sticky","to","Brand","Toggle","aria-controls","Collapse","id","Nav","defaultActiveKey","className","Link","eventKey","fill","NavDropdown","drop","title","login_credentials","username","Item","href","onClick","onReq","Button","Component","Home","Jumbotron","Authors","Tab","Container","Row","Col","sm","Content","Pane","About","ListGroup","ENDPOINT","require","BACKEND_ENDPOINT","Login","state","isLoaded","error","password","name","fetch","then","res","json","setState","catch","err","console","log","method","headers","body","JSON","stringify","alert","user_id","_id","devices","onRoomChange","room","event","fieldName","target","fieldVal","value","message","Form","Group","controlId","Label","Control","type","onChange","handleChange","bind","Check","label","handleSubmit","SignUp","isSubmitted","email","onSubmit","placeholder","as","MAXIMUM_MESSAGE_SIZE","arrayBufferWithMime","arrayBufferMimeDecouple","arrayBufferConcat","Dashboard","tmp","configuration","chunks","clientList","isInitiator","clientId","dest_id","dataChannel","connections","datachannels","online","memberList","file","socket","downloadList","usernames","onlineUsers","length","html","i","element","push","sendConnect","a","emit","device","Date","now","tmp1","RTCPeerConnection","onicecandidate","candidate","sendMessage","sdpMLineIndex","sdpMid","createDataChannel","binaryType","onDataChannelCreated","createOffer","offer","setLocalDescription","localDescription","logError","ondatachannel","channel","onopen","onclose","onmessage","data","abWithMime","reduce","acc","arrayBuffer","Uint8Array","byteLength","set","mime","blob","Blob","render1","warn","toString","fileName","url","window","URL","createObjectURL","download","setRemoteDescription","RTCSessionDescription","createAnswer","answer","onLocalSessionCreated","addIceCandidate","RTCIceCandidate","desc","ev","send","slice","len","uint8","n","charCodeAt","char","String","fromCharCode","buffer","location","hash","socketIOClient","connect","reconnect","on","clientsInRoom","isAllConnect","renderClients","allConnect","dest_Id","users","t","createPeer","reload","array","signalingMessageCallback","files","sendFile","userList","createUserList","FormFile","e","addFile","data-browse","RoomSelect","DeviceSelection","transaction","d","onDeviceChange","h","device_list","onSelect","handleSelect","Middle","middle","middle_content","App","handleReq","handleRoomChange","ls","lc","r","exact","path","handleDeviceChange","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f7d20c28.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {Button, Container, Image, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\nimport {LinkContainer} from 'react-router-bootstrap';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./headers.css\";\n\nclass Header extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         logged_in: props.logged_in\n    //     };\n    // }\n\n    render() {\n        let header;\n        if (!this.props.login_data.logged_in) {\n            header = (\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky={\"top\"}>\n                    <LinkContainer to={\"/\"}>\n                        <Navbar.Brand>P2P</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <LinkContainer to={\"/\"}>\n                                {/*<Nav.Link eventKey={\"home\"} onSelect={()=>this.props.onReq(\"home\")}>Home</Nav.Link>*/}\n                                <Nav.Link eventKey={\"home\"}>Home</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to={\"/about\"}>\n                                {/*<Nav.Link eventKey={\"faq\"} onSelect={()=>this.props.onReq(\"faq\")}>FAQs</Nav.Link>*/}\n                                <Nav.Link eventKey={\"about\"}>About</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to={\"/authors\"}>\n                                {/*<Nav.Link eventKey={\"about\"} onSelect={()=>this.props.onReq(\"about\")}>Authors</Nav.Link>*/}\n                                <Nav.Link eventKey={\"authors\"}>Authors</Nav.Link>\n                            </LinkContainer>\n                        </Nav>\n                        <Nav fill={true} className=\"justify-content-end\">\n                            <LinkContainer to={\"/login\"}>\n                                {/*<Button variant={\"outline-primary\"} onClick={()=>this.props.onReq(\"login\")}>Login</Button>*/}\n                                <Button variant={\"outline-primary\"}>Login</Button>\n                            </LinkContainer>\n                            <LinkContainer to={\"/sign_up\"}>\n                                {/*<Button variant={\"primary\"} onClick={()=>this.props.onReq(\"sign_up\")}>Sign-up</Button>*/}\n                                <Button variant={\"primary\"}>Sign-up</Button>\n                            </LinkContainer>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            );\n        }\n        else{\n            header = (\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky={\"top\"}>\n                    {/*<Container fluid={true}>*/}\n                        <LinkContainer to={\"/\"}>\n                            <Navbar.Brand>P2P</Navbar.Brand>\n                        </LinkContainer>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav defaultActiveKey={\"home\"} className=\"mr-auto\">\n                                <LinkContainer to={\"/\"}>\n                                    {/*<Nav.Link eventKey={\"home\"} onSelect={()=>this.props.onReq(\"home\")}>Home</Nav.Link>*/}\n                                    <Nav.Link eventKey={\"home\"}>Home</Nav.Link>\n                                </LinkContainer>\n                                <LinkContainer to={\"/about\"}>\n                                    {/*<Nav.Link eventKey={\"faq\"} onSelect={()=>this.props.onReq(\"faq\")}>FAQs</Nav.Link>*/}\n                                    <Nav.Link eventKey={\"about\"}>About</Nav.Link>\n                                </LinkContainer>\n                                <LinkContainer to={\"/authors\"}>\n                                    {/*<Nav.Link eventKey={\"about\"} onSelect={()=>this.props.onReq(\"about\")}>Authors</Nav.Link>*/}\n                                    <Nav.Link eventKey={\"authors\"}>Authors</Nav.Link>\n                                </LinkContainer>\n                                <LinkContainer to={\"/dashboard\"}>\n                                    {/*<Nav.Link eventKey={\"about\"} onSelect={()=>this.props.onReq(\"about\")}>Authors</Nav.Link>*/}\n                                    <Nav.Link eventKey={\"dashboard\"}>Dashboard</Nav.Link>\n                                </LinkContainer>\n                            </Nav>\n                            <Nav fill={true} className={\"justify-content-end\"}>\n                                <NavDropdown eventKey={1} id=\"basic-nav-dropdown\" drop={\"down\"}\n                                title= {this.props.login_data.login_credentials.username}\n                                >\n\n                                    <NavDropdown.Item eventKey={1.1} href=\"#profile\">Profile</NavDropdown.Item>\n                                    <NavDropdown.Item eventKey={1.2} href={\"/\"} onClick={()=>this.props.onReq(\"false\",null)}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                            </Nav>\n                        </Navbar.Collapse>\n                    {/*</Container>*/}\n                </Navbar>\n            );\n        }\n        return (\n            header\n        );\n    }\n}\n\nexport { Header };","import React, { useState, useEffect, Component } from \"react\";\nimport {Button, Jumbotron} from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <Jumbotron>\n                <h1>P2P file sharing</h1>\n                <p>\n                    This is a peer to peer file sharing app, intending to act as a medium to share files amongst personal devices.\n                </p>\n                <p>\n                    <LinkContainer to={\"/about\"}>\n                        <Button variant=\"info\">Learn more</Button>\n                    </LinkContainer>\n                </p>\n            </Jumbotron>\n        );\n    }\n}\n\nexport {Home};","import React, { Component } from \"react\";\nimport {Col, ListGroup, Nav, Row, Tab} from 'react-bootstrap'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass Authors extends Component {\n    render() {\n        return (\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n                <Row>\n                    <Col sm={3}>\n                        <Nav variant=\"pills\" className=\"flex-column\">\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"first\">Srihari Vemuru</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"second\">Sushranth Hebbar</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"third\">Mohammad Khalid</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Col>\n                    <Col sm={9}>\n                        <Tab.Content>\n                            <Tab.Pane eventKey=\"first\">\n                                <h1>Role</h1>\n                                <p1>Frontend design, integration, network logic</p1>\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"second\">\n                                <h1>Role</h1>\n                                <p1>Backend, network logic</p1>\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"third\">\n                                <h1>Role</h1>\n                                <p1>DevOps tools</p1>\n                            </Tab.Pane>\n                        </Tab.Content>\n                    </Col>\n                </Row>\n            </Tab.Container>\n        );\n    }\n}\n\nexport {Authors};","import React, { useState, useEffect, Component } from \"react\";\nimport {Col, ListGroup, Nav, Row, Tab} from 'react-bootstrap'\nimport \"./dashboard.css\";\nimport {Github} from \"react-bootstrap-icons\";\n\nclass About extends Component {\n    render() {\n        return (\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n                <Row>\n                    <Col sm={3}>\n                        <Nav variant=\"pills\" className=\"flex-column\">\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"first\">App</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey=\"second\">Tools</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Col>\n                    <Col sm={9}>\n                        <Tab.Content>\n                            <Tab.Pane eventKey=\"first\">\n                                <p1>\n                                    This is a peer to peer file sharing app, intending to act as a medium to share files amongst personal devices\n                                    <Github href={\"https://github.com/falcon2212/window-drop\"} />\n                                </p1>\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"second\">\n                                <h1>Frontend</h1>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item><b>React.js</b> framework</ListGroup.Item>\n                                    <ListGroup.Item><b>react-bootstrap</b> components</ListGroup.Item>\n                                    <ListGroup.Item><b>socket.io-client</b> for client side event handling</ListGroup.Item>\n                                </ListGroup>\n                                <h1>Backend</h1>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item><b>Node.js</b>+<b>Express</b> framework</ListGroup.Item>\n                                    <ListGroup.Item><b>socket.io</b> for event handling over network</ListGroup.Item>\n                                    <ListGroup.Item><b>WebRTC</b> for peer communication</ListGroup.Item>\n                                    <ListGroup.Item><b>Mongoose</b> for user management</ListGroup.Item>\n                                </ListGroup>\n                                <h1>DevOps</h1>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item><b>WebStorm</b>, <b>VisualStudio</b> IDEs</ListGroup.Item>\n                                    <ListGroup.Item><b>GitHub Actions</b> for CI/CD</ListGroup.Item>\n                                    <ListGroup.Item><b>Docker</b> for containerization</ListGroup.Item>\n                                    <ListGroup.Item><b>Azure</b> for deploying the app</ListGroup.Item>\n                                </ListGroup>\n                            </Tab.Pane>\n                        </Tab.Content>\n                    </Col>\n                </Row>\n            </Tab.Container>\n        );\n    }\n}\n\nexport {About};\n\n\n\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Login.css\"\nimport {Button, Form} from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {Redirect} from \"react-router\";\n\nlet APP_CONFIG = require(\"../config/app_config\");\nconst ENDPOINT = APP_CONFIG.BACKEND_ENDPOINT;\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            error: null,\n            username: \"\",\n            password: \"\",\n            name: \"\"\n        };\n\n        // this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(ENDPOINT+\"start\")\n            .then(res => res.json())\n            .then((res) => {\n                this.setState({isLoaded: true,});\n            })\n            .catch((err)=>{\n                this.setState({isLoaded: true, error: err});\n                console.log(err);\n            });\n    }\n\n    handleSubmit() {\n        // <validate_user user={this.state} handleValid={(n)=>{this.setState({isLoaded: true, name: n})}/>\n        fetch(ENDPOINT+\"users/find\", {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\n        })\n            .then(res => res.json())\n            .then(\n                res => {\n                    if(res === null){\n                        console.log(\"Username password do not match\");\n                        alert(\"username password do not match\");\n                    }\n                    else if (res.name !== \"\") {\n                        console.log(res);\n                        this.props.onReq(true, {username: this.state.username, name: res.name, user_id: res._id, devices: res.devices});\n                        this.props.onRoomChange(res.room);\n                        this.setState({name: res.name});\n                    }\n                })\n            .catch(\n                err => {\n                    console.log(err);\n                });\n    }\n\n    handleChange(event){\n        let fieldName = event.target.name;\n        let fieldVal = event.target.value;\n        this.setState({[fieldName]: fieldVal});\n    }\n\n    render() {\n        let { isLoaded, error, username, password, name} = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else if(name !== \"\"){\n            return <Redirect to={\"/device_select\"}/>;\n        }\n        else {\n            {/*TODO: isLoaded error handling*/}\n            return (\n                <Form className={\"form-global\"}>\n                    <h3>Login</h3>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type={\"text\"} name={\"username\"}\n                                      onChange={this.handleChange.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" name={\"password\"}\n                                      onChange={this.handleChange.bind(this)}/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"Remember me\"/>\n                    </Form.Group>\n                    {/*<LinkContainer to={\"/\"}>*/}\n\n                    <Button variant=\"primary\" onClick={() => this.handleSubmit()}>\n                        Submit\n                    </Button>\n                    {/*</LinkContainer>*/}\n                    {/*<AfterSubmit name={this.state.name}/>*/}\n                </Form>\n            );\n        }\n    }\n}\n\n\nexport {Login};","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Button, Col, Container, Form} from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {Redirect} from \"react-router\";\n\nlet APP_CONFIG = require(\"../config/app_config\");\nconst ENDPOINT = APP_CONFIG.BACKEND_ENDPOINT;\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            isSubmitted: false,\n            error: null,\n            username: \"\",\n            password: \"\",\n            name: \"\",\n            email: \"\"\n        };\n    }\n\n    componentDidMount() {\n        fetch(ENDPOINT+\"start\")\n            .then(res => res.json())\n            .then((res) => {\n                this.setState({isLoaded: true,});\n            })\n            .catch((err)=>{\n                this.setState({isLoaded: true, error: err});\n                console.log(err);\n            });\n    }\n\n    handleSubmit() {\n        fetch(ENDPOINT+\"users/add\", {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({username: this.state.username, password: this.state.password, email: this.state.email, name: this.state.name})\n        })\n            .then(res => res.json())\n            .then(\n                res => {\n                    {/*TODO: username already exists condition*/}\n                    if(res === null){\n                        console.log(\"Username password do not match\");\n                        alert(\"username password do not match\");\n                    }\n                    else{\n                        console.log(res);\n                        this.props.onReq(true, {username: this.state.username, name: this.state.name, user_id: res._id, devices: []});\n                        this.props.onRoomChange(res.room);\n                        this.setState({isSubmitted: true});\n                    }\n                })\n            .catch(\n                err => {\n                    console.log(err);\n                }\n            );\n    }\n\n    handleChange(event){\n        let fieldName = event.target.name;\n        let fieldVal = event.target.value;\n        this.setState({[fieldName]: fieldVal});\n    }\n\n    render() {\n        let { isLoaded, isSubmitted, error, username, password, email} = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        }\n        else if(isSubmitted){\n            return <Redirect to={\"/device_select\"}/>;\n        }\n        else {\n            return (\n                <Container className={\"justify-content-center mb-5 mt-5\"}>\n                    <Form onSubmit={ () => this.handleSubmit()}>\n                        <Form.Group>\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control name={\"username\"} placeholder=\"For eg, brain_freeze, v-house\" onChange={this.handleChange.bind(this)}/>\n                        </Form.Group>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control name={\"email\"} type=\"email\" placeholder=\"Enter email\" onChange={this.handleChange.bind(this)}/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control name={\"password\"} type=\"password\" placeholder=\"Password\" onChange={this.handleChange.bind(this)}/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group controlId=\"formGridFirstName\">\n                            <Form.Label>First name</Form.Label>\n                            <Form.Control name={\"name\"} onChange={this.handleChange.bind(this)}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formGridSecondName\">\n                            <Form.Label>Second name</Form.Label>\n                            <Form.Control/>\n                        </Form.Group>\n\n                        {/*<LinkContainer to={\"/\"}>*/}\n                        <Button variant=\"primary\" onClick={() => this.handleSubmit()}>\n                            Submit\n                        </Button>\n                        {/*</LinkContainer>*/}\n                    </Form>\n                </Container>\n            );\n        }\n    }\n}\n\nexport {SignUp};","import React, { useState, useEffect, Component } from \"react\";\nimport \"./dashboard.css\";\nimport socketIOClient from \"socket.io-client\";\nimport {Button, Col, Container, FormFile, ListGroup, Row} from \"react-bootstrap\";\nimport {ArrowUpSquareFill} from \"react-bootstrap-icons\";\n\nconst MAXIMUM_MESSAGE_SIZE = 655350;\nconst END_OF_FILE_MESSAGE = 'EOF';\nconst {arrayBufferWithMime,arrayBufferMimeDecouple} = require('arraybuffer-mime');\nconst arrayBufferConcat = require('arraybuffer-concat')\n\nlet APP_CONFIG = require(\"../config/app_config\");\nconst ENDPOINT = APP_CONFIG.BACKEND_ENDPOINT;\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            configuration : {\n                'iceServers': [{\n                    'urls': 'stun:stun.l.google.com:19302'\n                }]\n            },\n            room:null,\n            chunks : [],\n            clientList: [],\n            isInitiator: null,\n            clientId: null,\n            dest_id: null,\n            dataChannel: null,\n            connections : {},\n            datachannels : {},\n            online: null,\n            memberList: [],\n            file:null,\n            socket:null,\n            downloadList:null,\n            usernames:{},\n        };\n    }\n\n    renderClients (){\n        var onlineUsers = ((this.state.clientList.length === 0) ? 0 : (this.state.clientList.length - 1) );\n\n        this.setState({online: onlineUsers});\n\n        var html = [];\n        if(this.state.clientList.length === 1)\n        {\n            this.setState({memberList: html});\n            return;\n        }\n\n        for(var i=0; i<this.state.clientList.length; i++)\n        {\n            var element = this.state.clientList[i];\n            if(element === this.state.clientId) continue;\n            html.push(element);\n            this.setState({memberList: html});\n\n        }\n    }\n\n    allConnect (){\n        this.setState({connections: {}});\n        this.setState({datachannels: {}});\n        for(let i = 0;i<this.state.clientList.length;i++){\n            var element = this.state.clientList[i];\n            if(element === this.state.clientId) continue;\n            this.sendConnect(element);\n        }\n    }\n\n    async sendConnect (id){\n        this.setState({dest_id: id});\n        this.setState({isInitiator: true});\n        this.state.socket.emit('sendConnect', this.state.dest_id, this.state.clientId, this.state.room, this.props.login_data.device);\n        return true;\n    }\n\n    t(){\n        console.log(Date.now());\n    }\n\n    createPeer(id){\n\n        //var connect = document.getElementById('connect');\n        //connect.style.display = 'block';\n\n        let tmp = this.state.connections;\n        let tmp1 = this.state.datachannels;\n        tmp[id] = new RTCPeerConnection(this.state.configuration);\n\n        tmp[id].onicecandidate = (event) => {\n            if (event.candidate) {\n                this.sendMessage({\n                    type: 'candidate',\n                    label: event.candidate.sdpMLineIndex,\n                    id: event.candidate.sdpMid,\n                    candidate: event.candidate.candidate\n                },id);\n            } else {\n            }\n        };\n        this.setState({connections:tmp});\n\n        if (this.state.isInitiator) {\n            tmp1[id] = this.state.connections[id].createDataChannel('files');\n            tmp1[id].binaryType = 'arraybuffer';\n            this.setState({datachannels: tmp1});\n            this.onDataChannelCreated(id);\n\n            this.state.connections[id].createOffer().then((offer) => {\n                return this.state.connections[id].setLocalDescription(offer);\n            })\n                .then(() => {\n                    this.sendMessage(this.state.connections[id].localDescription, id);\n                })\n                .catch(this.logError);\n\n        } else {\n            tmp[id].ondatachannel = (event) => {\n                tmp1[id] = event.channel;\n                tmp1[id].binaryType = 'arraybuffer';\n                this.setState({datachannels: tmp1});\n                this.onDataChannelCreated(id);\n            };\n            this.setState({connections:tmp});\n        }\n    }\n\n    sendMessage (message, id) {\n        this.state.socket.emit('message', message, id, this.state.clientId);\n    }\n\n    onDataChannelCreated (id){\n\n        let channel = this.state.datachannels;\n        channel[id].onopen = () => {\n        };\n\n        channel[id].onclose = () => {\n            // currentState.sendBtn = false;\n        }\n\n        channel[id].onmessage = async (event) => {\n            const { data } = event;\n            try {\n                if (data !== END_OF_FILE_MESSAGE) {\n                    var tmp = this.state.chunks;\n                    tmp.push(data);\n                    this.setState({chunks:tmp});\n                } else {\n                    let abWithMime = this.state.chunks.reduce((acc, arrayBuffer) => {\n                        const tmp = new Uint8Array(acc.byteLength + arrayBuffer.byteLength);\n                        tmp.set(new Uint8Array(acc), 0);\n                        tmp.set(new Uint8Array(arrayBuffer), acc.byteLength);\n                        return tmp;\n                    }, new Uint8Array());\n                    const {mime, arrayBuffer} = arrayBufferMimeDecouple(abWithMime)\n                    const blob = new Blob([arrayBuffer], {type : mime});\n                    this.render1(blob, \"download\");\n                    //channel.close();\n                }\n            } catch (err) {\n            }\n        };\n        this.setState({datachannels: channel});\n    };\n\n    logError (err) {\n        if (!err) return;\n        if (typeof err === 'string') {\n            console.warn(err);\n        } else {\n            console.warn(err.toString(), err);\n        }\n    }\n\n    render1 (blob, fileName){\n        var html;\n        const url = window.URL.createObjectURL(blob);\n        if(url)\n        {\n            html = <li><small><a href={url} download={fileName}>Incoming file</a></small></li> ;\n        }\n        else\n        {\n            html = <li>No files available here</li>;\n        }\n        this.setState({downloadList: html});\n        this.setState({chunks: []});\n    }\n\n    signalingMessageCallback (message, id) {\n        if (message.type === 'offer') {\n            this.state.connections[id].setRemoteDescription(new RTCSessionDescription(message), () => {},\n                this.logError);\n            this.state.connections[id].createAnswer().then((answer) => {\n                this.onLocalSessionCreated(answer,id);\n            }).catch(this.logError);\n        } else if (message.type === 'answer') {\n            this.state.connections[id].setRemoteDescription(new RTCSessionDescription(message), () => {},\n                this.logError);\n        } else if (message.type === 'candidate') {\n            this.state.connections[id].addIceCandidate(new RTCIceCandidate({\n                candidate: message.candidate,\n                sdpMLineIndex: message.label,\n                sdpMid: message.id\n            }));\n        }\n    }\n\n    onLocalSessionCreated (desc,id) {\n        this.state.connections[id].setLocalDescription(desc).then(() => {\n            this.sendMessage(this.state.connections[id].localDescription, id);\n        }).catch(this.logError);\n    }\n\n    async sendFile(ev){\n        let id = ev.target.value;\n        // for(var i=0; i<this.state.clientList.length; i++){\n        //     if(this.state.clientId === this.state.clientList[i]) continue;\n        //     else{\n        //         id = this.state.clientList[i];\n        //     }\n        // }\n        // var id = element.getAttribute(\"id\");\n        // var fileInput = document.getElementById('file')\n        var file = this.state.file;\n\n        if(file){\n            let arrayBuffer = await file.arrayBuffer();\n            let mime = file.type;\n            let abWithMime = arrayBufferWithMime(arrayBuffer, mime)\n            let dataChannel = this.state.datachannels[id];\n\n            for (let i = 0; i < abWithMime.byteLength; i += MAXIMUM_MESSAGE_SIZE) {\n                dataChannel.send(abWithMime.slice(i, i + MAXIMUM_MESSAGE_SIZE));\n            }\n            dataChannel.send(END_OF_FILE_MESSAGE);\n        }\n    }\n\n    arrayBufferWithMime(arrayBuffer, mime) {\n        const len = mime.length\n        const uint8 = new Uint8Array(len + 1)\n\n        uint8[0] = len\n\n        for (var i = 0; i < len; i++) {\n            var n = mime[i].charCodeAt(0)\n            uint8[i+1] = n\n        }\n\n        const ab = arrayBufferConcat(uint8, arrayBuffer)\n\n        return ab\n    }\n\n    arrayBufferMimeDecouple(arrayBufferWithMime) {\n        const uint8 = new Uint8Array(arrayBufferWithMime)\n        var mime = ''\n        const len = uint8[0]\n\n        for (var i = 0; i < len; i++) {\n            var char = uint8[i+1]\n\n            mime += String.fromCharCode(char)\n        }\n\n        var arrayBuffer = uint8.slice(len+1).buffer\n\n        return {\n            mime: mime,\n            arrayBuffer: arrayBuffer\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props.login_data.room)\n        if (this.props.login_data.room !== null) {\n            this.state.room = window.location.hash = this.props.login_data.room;\n        }\n        else {\n            this.state.room = window.location.hash = \"1\";\n        }\n\n        this.state.socket = socketIOClient.connect(ENDPOINT, {reconnect: true});\n\n        this.state.socket.emit('create or join', this.state.room);\n\n        this.state.socket.on('Display clients', (clientsInRoom, isAllConnect) => {\n            this.setState({clientList: clientsInRoom});\n            this.renderClients();\n            if(isAllConnect) this.allConnect();\n        });\n\n        this.state.socket.on('ready', (dest_Id, username) => {\n\n            let users = this.state.usernames;\n            users[dest_Id] = username;\n            this.setState({usernames: users});\n\n            this.t();\n            this.createPeer(dest_Id);\n            this.t();\n        });\n\n        this.state.socket.on('reset', () => {\n            window.location.reload();\n        });\n\n        this.state.socket.on('sendConnect', (dest_Id, username) => {\n\n            let users = this.state.usernames;\n            users[dest_Id] = username;\n            this.setState({usernames: users});\n\n            this.setState({dest_id: dest_Id});\n            this.setState({isInitiator: false});\n            this.t();\n            this.createPeer(this.state.dest_id);\n            this.t();\n            this.state.socket.emit('ready', this.state.dest_id, this.state.clientId, this.props.login_data.device);\n            return true;\n        });\n\n        this.state.socket.on('socketid', (id) => {\n            this.setState({clientId: id});\n        });\n\n        this.state.socket.on('log', (array) => {\n        });\n\n        this.state.socket.on('message', (message, id) => {\n            this.signalingMessageCallback(message, id);\n        });\n    }\n\n    componentWillUnmount() {\n        this.state.socket.emit('final_step', this.state.room);\n    }\n\n    addFile(event){\n        this.setState({file: event.target.files[0]});\n    }\n\n    tmp = (event) => {\n    }\n    createUserList() {\n        let html = [];\n        for(var i=0; i<this.state.memberList.length; i++){\n            html.push(\n                <ListGroup.Item>\n                    {this.state.usernames[this.state.memberList[i]]}<Button value={this.state.memberList[i]} onClick={(ev) => this.sendFile(ev)}>Send file</Button>\n                    {/*<Row className={\"p-2\"}>*/}\n                    {/*    <Col>{this.state.memberList[i]}</Col>*/}\n                    {/*    /!*<Col><Form.File onChange={(e) => {this.addFile(e)}} type={\"file\"} className={\"custom-file-label\"} label={this.state.memberList[i]} custom/></Col>*!/*/}\n                    {/*    <Col className={\"justify-content-end\"}><Button value={this.state.memberList[i]} onClick={(ev) => this.sendFile(ev.target.value)}/></Col>*/}\n                    {/*</Row>*/}\n                </ListGroup.Item>\n            );\n        }\n        return html;\n    }\n\n    render() {\n        let userList = this.createUserList();\n        return(\n            <Container className={\"justify-content-center mb-5 mt-5\"}>\n                <div>\n                    Users online: {this.state.online}\n                </div>\n                <div>\n                    {/*<FormFile onChange={(e) => {this.addFile(e)}} type={\"file\"} className={\"custom-file-label\"} label={\"Select file\"} custom/>*/}\n                    <FormFile onChange={(e) => {this.addFile(e)}} type={\"file\"} data-browse={\"Select file\"}/>\n                    <ul id=\"downloadList\">{this.state.downloadList}</ul>\n                </div>\n                <ListGroup>\n                    {userList}\n                </ListGroup>\n            </Container>\n        );\n    }\n}\n\nexport {Dashboard};\n\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Login.css\"\nimport {Button, Form} from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {Redirect} from \"react-router\";\n\nlet APP_CONFIG = require(\"../config/app_config\");\nconst ENDPOINT = APP_CONFIG.BACKEND_ENDPOINT;\n\nclass RoomSelect extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            room: null,\n        };\n\n        // this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.state.room = null;\n    }\n\n    handleChange(event){\n        let fieldName = event.target.name;\n        let fieldVal = event.target.value;\n        this.setState({[fieldName]: fieldVal});\n        this.props.onRoomChange(fieldVal);\n    }\n\n    render() {\n            return (\n                <Form className={\"form-global\"}>\n                    <h3>Room select</h3>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Room number</Form.Label>\n                        <Form.Control type={\"text\"} name={\"room\"}\n                                      onChange={this.handleChange.bind(this)}/>\n                    </Form.Group>\n\n                    <LinkContainer to={\"/dashboard\"}>\n                        <Button variant=\"primary\">\n                            Submit\n                        </Button>\n                    </LinkContainer>\n                </Form>\n            );\n    }\n}\n\n\nexport {RoomSelect};","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Login.css\"\nimport {Button, Form, ListGroup} from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {Redirect} from \"react-router\";\n\nlet APP_CONFIG = require(\"../config/app_config\");\nconst ENDPOINT = APP_CONFIG.BACKEND_ENDPOINT;\n\nclass DeviceSelection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            device: null,\n            transaction:false,\n        };\n\n        // this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.state.device = null;\n    }\n\n    handleSubmit() {\n        let d = this.props.login_data.login_credentials.devices;\n        d.push(this.state.device);\n        fetch(ENDPOINT+\"users/update_devices/\"+this.props.login_data.login_credentials.user_id, {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({devices: d})\n        })\n            .then(res => res.json())\n            .then(\n                res => {\n                    if(res === null){\n                        console.log(\"Some issue\");\n                    }\n                    else {\n                        console.log(res);\n                        this.props.onReq(true, {username: res.username, name: res.name, user_id: res._id, devices: res.devices});\n                        this.props.onDeviceChange(this.state.device);\n                        this.setState({transaction: true});\n                    }\n                }\n            )\n            .catch(\n                err => {\n                    console.log(err);\n                });\n    }\n\n    handleChange(event){\n        let fieldName = event.target.name;\n        let fieldVal = event.target.value;\n        this.setState({[fieldName]: fieldVal});\n    }\n\n    handleSelect(event){\n        this.props.onDeviceChange(event);\n        this.setState({transaction: true});\n    }\n\n    render() {\n        let h;\n        if(this.state.transaction){\n            console.log(this.state);\n            return <Redirect to={\"/dashboard\"}/>;\n        }\n        else {\n            if(this.props.login_data.login_credentials.devices.length === 0){\n                h = (\n                    <div className={\"form-global\"}>\n                        <Form>\n                            <h3>New device?</h3>\n                            <Form.Group controlId=\"formBasicDevice\">\n                                <Form.Label>Device name</Form.Label>\n                                <Form.Control type={\"text\"} name={\"device\"}\n                                              onChange={this.handleChange.bind(this)}/>\n                            </Form.Group>\n\n                            <Button variant=\"primary\" onClick={() => this.handleSubmit()}>\n                                Register\n                            </Button>\n                        </Form>\n                    </div>\n                );\n            }\n            else{\n                let device_list = [];\n                for(var i=0; i<this.props.login_data.login_credentials.devices.length; i++){\n                    device_list.push(<ListGroup.Item eventKey={this.props.login_data.login_credentials.devices[i]}>{this.props.login_data.login_credentials.devices[i]}</ListGroup.Item>);\n                }\n                h = (\n                    <div className={\"form-global\"}>\n                        <h3>Which device is this?</h3>\n                        <ListGroup onSelect={this.handleSelect.bind(this)}>{device_list}</ListGroup>\n                        <Form>\n                            <h3>New device?</h3>\n                            <Form.Group controlId=\"formBasicDevice\">\n                                <Form.Label>Device name</Form.Label>\n                                <Form.Control type={\"text\"} name={\"device\"}\n                                              onChange={this.handleChange.bind(this)}/>\n                            </Form.Group>\n\n                            <Button variant=\"primary\" onClick={() => this.handleSubmit()}>\n                                Register\n                            </Button>\n                        </Form>\n                    </div>\n                );\n            }\n        }\n        return (\n            h\n        );\n    }\n}\n\n\nexport {DeviceSelection};","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Home} from \"./Home\";\nimport {Authors} from \"./Authors\";\nimport {About} from \"./About\";\nimport {Login} from \"./Login\";\nimport {SignUp} from \"./SignUp\";\nimport {Dashboard} from \"./Dashboard\";\nimport {RoomSelect} from \"./RoomSelect\";\nimport {DeviceSelection} from \"./DeviceSelection\";\n\nclass Middle extends Component{\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         middle_content: this.props.middle_content\n    //     };\n    // }\n\n    render() {\n        let middle;\n        if(this.props.middle_content === \"home\"){\n            middle = <Home/>;\n        }\n        else if(this.props.middle_content === \"authors\"){\n            middle = <Authors/>;\n        }\n        else if(this.props.middle_content === \"about\"){\n            middle = <About/>;\n        }\n        else if(this.props.middle_content === \"login\"){\n            middle = <Login onReq={this.props.onReq} onRoomChange={this.props.onRoomChange}/>;\n        }\n        else if(this.props.middle_content === \"sign_up\"){\n            middle = <SignUp onReq={this.props.onReq} onRoomChange={this.props.onRoomChange}/>;\n        }\n        else if(this.props.middle_content === \"dashboard\"){\n            middle = <Dashboard login_data={this.props.login_data}/>;\n        }\n        else if(this.props.middle_content === \"room_select\"){\n            middle = <RoomSelect onRoomChange={this.props.onRoomChange}/>;\n        }\n        else if(this.props.middle_content === \"device_select\"){\n            middle = <DeviceSelection login_data={this.props.login_data} onDeviceChange={this.props.onDeviceChange} onRoomChange={this.props.onRoomChange} onReq={this.props.onReq}/>;\n        }\n        return(\n            middle\n        );\n    }\n}\n\nexport {Middle};","import React, { Component } from 'react';\nimport {\n    Switch,\n    Route,\n    useParams,\n    useRouteMatch\n} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Header } from \"./components/Header\";\nimport {Middle} from \"./components/Middle\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            logged_in: false,\n            login_credentials : {},\n            device:null,\n            room: null,\n            // middle_content: \"home\"\n        };\n        this.handleReq = this.handleReq.bind(this);\n        this.handleRoomChange = this.handleRoomChange.bind(this);\n    }\n\n    handleReq(ls, lc) {\n        this.setState({logged_in: ls, login_credentials: lc});\n        // this.render();\n    }\n\n    handleDeviceChange(d){\n        this.setState({device: d})\n    }\n\n    handleRoomChange(r) {\n        this.setState({room: r});\n    }\n\n    render() {\n        return(\n            <div>\n                {/*<Header logged_in={this.state.logged_in}/>*/}\n                {/*<Middle middle_content={\"home\"}/>*/}\n                <Switch>\n                    <Route exact path={\"/\"}>\n                        {/*<Header logged_in={this.state.logged_in} onReq={(mc) => this.handleReq(this.state.logged_in,mc)}/>*/}\n                        <Header login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                        <Middle middle_content={\"home\"}/>\n                    </Route>\n                    <Route path={\"/about\"}>\n                        <Header login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                        <Middle middle_content={\"about\"}/>\n                    </Route>\n                    <Route path={\"/authors\"}>\n                        <Header login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                        <Middle middle_content={\"authors\"}/>\n                    </Route>\n                    <Route path={\"/login\"}>\n                        <Header login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                        <Middle middle_content={\"login\"} onReq={(ls, lc) => this.handleReq(ls, lc)} onRoomChange={(r) => this.handleRoomChange(r)}/>\n                    </Route>\n                    <Route path={\"/sign_up\"}>\n                        <Header login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                        <Middle middle_content={\"sign_up\"} onReq={(ls, lc) => this.handleReq(ls, lc)} onRoomChange={(r) => this.handleRoomChange(r)}/>\n                    </Route>\n                    <Route path={\"/dashboard\"}>\n                        <Header login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                        <Middle middle_content={\"dashboard\"} login_data={this.state}/>\n                    </Route>\n                    <Route path={\"/room_select\"}>\n                        <Header login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                        <Middle middle_content={\"room_select\"} onRoomChange={(r) => this.handleRoomChange(r)}/>\n                    </Route>\n                    <Route path={\"/device_select\"}>\n                        <Header login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                        <Middle middle_content={\"device_select\"} login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)} onDeviceChange={(d) => this.handleDeviceChange(d)} onRoomChange={(r) => this.handleRoomChange(r)}/>\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport { App };","import React, {Component} from 'react';\n\nclass Tmp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            error: null,\n        };\n    }\n\n    componentDidMount() {\n        console.log('I was triggered during componentDidMount')\n        fetch(\"https://backend-service-falcon2212.cloud.okteto.net/\")\n            .then(res => res.json())\n            .then((res) => {\n                this.setState({isLoaded: true,});\n                console.log(res);\n            })\n            .catch((err)=>{\n                this.setState({isLoaded: true, error: err});\n                console.log('fuck')\n                console.log(err);\n            });\n    }\n\n    render(){\n        return(\n            <h1>Check console</h1>\n        );\n    }\n}\n\nexport { Tmp };","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {Route, Router} from \"react-router\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport { App } from \"./App\";\nimport {Tmp} from \"./Tmp\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n            {/*<Tmp/>*/}\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n","// Uncomment whichever endpoint you want\n\n// backend service\nmodule.exports = {\n    BACKEND_ENDPOINT: \"https://backend-service-falcon2212.cloud.okteto.net/\",\n}\n\n// module.exports = {\n//     BACKEND_ENDPOINT: \"http://localhost:3080/\",\n// }\n    "],"sourceRoot":""}