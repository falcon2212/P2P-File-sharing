{"version":3,"sources":["components/Header.js","components/Home.js","components/About.js","components/FAQ.js","components/Login.js","components/SignUp.js","components/Dashboard.js","components/Middle.js","App.js","Tmp.js","index.js","config/app_config.js"],"names":["Header","this","props","login_data","logged_in","Navbar","bg","variant","expand","sticky","to","Brand","Toggle","aria-controls","Collapse","id","Nav","defaultActiveKey","className","Link","eventKey","href","fill","NavDropdown","drop","title","login_credentials","username","Item","onClick","onReq","Button","Component","Home","About","FAQ","ENDPOINT","require","BACKEND_ENDPOINT","Login","state","isLoaded","error","password","name","fetch","then","res","json","setState","catch","err","console","log","method","headers","body","JSON","stringify","alert","event","fieldName","target","fieldVal","value","message","Form","Group","controlId","Label","Control","type","onChange","handleChange","bind","Check","label","handleSubmit","SignUp","isSubmitted","email","Container","onSubmit","placeholder","Row","as","Col","arrayBufferWithMime","arrayBufferMimeDecouple","arrayBufferConcat","Dashboard","tmp","configuration","room","chunks","clientList","isInitiator","clientId","dest_id","dataChannel","connections","datachannels","online","memberList","file","socket","downloadList","usernames","onlineUsers","length","html","i","element","push","sendConnect","a","emit","Date","now","tmp1","RTCPeerConnection","onicecandidate","candidate","sendMessage","sdpMLineIndex","sdpMid","createDataChannel","binaryType","onDataChannelCreated","createOffer","offer","setLocalDescription","localDescription","logError","ondatachannel","channel","onopen","onclose","onmessage","data","abWithMime","reduce","acc","arrayBuffer","Uint8Array","byteLength","set","mime","blob","Blob","render1","warn","toString","fileName","url","window","URL","createObjectURL","download","setRemoteDescription","RTCSessionDescription","createAnswer","answer","onLocalSessionCreated","addIceCandidate","RTCIceCandidate","desc","ev","send","slice","len","uint8","n","charCodeAt","char","String","fromCharCode","buffer","location","hash","socketIOClient","connect","reconnect","on","clientsInRoom","isAllConnect","renderClients","allConnect","dest_Id","users","t","createPeer","reload","array","signalingMessageCallback","files","ListGroup","sendFile","userList","createUserList","FormFile","e","addFile","data-browse","Middle","middle","middle_content","App","handleReq","ls","lc","exact","path","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3b50ef46.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {Button, Container, Image, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\nimport {LinkContainer} from 'react-router-bootstrap';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./headers.css\";\n\nclass Header extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         logged_in: props.logged_in\n    //     };\n    // }\n\n    render() {\n        let header;\n        if (!this.props.login_data.logged_in) {\n            header = (\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky={\"top\"}>\n                    <LinkContainer to={\"/\"}>\n                        <Navbar.Brand>WinDrop</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <LinkContainer to={\"/\"}>\n                                {/*<Nav.Link eventKey={\"home\"} onSelect={()=>this.props.onReq(\"home\")}>Home</Nav.Link>*/}\n                                <Nav.Link eventKey={\"home\"} href={\"/\"}>Home</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to={\"/faq\"}>\n                                {/*<Nav.Link eventKey={\"faq\"} onSelect={()=>this.props.onReq(\"faq\")}>FAQs</Nav.Link>*/}\n                                <Nav.Link eventKey={\"faq\"} href={\"/faq\"}>FAQs</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to={\"/about\"}>\n                                {/*<Nav.Link eventKey={\"about\"} onSelect={()=>this.props.onReq(\"about\")}>About</Nav.Link>*/}\n                                <Nav.Link eventKey={\"about\"}>About</Nav.Link>\n                            </LinkContainer>\n                        </Nav>\n                        <Nav fill={true} className=\"justify-content-end\">\n                            <LinkContainer to={\"/login\"}>\n                                {/*<Button variant={\"outline-primary\"} onClick={()=>this.props.onReq(\"login\")}>Login</Button>*/}\n                                <Button variant={\"outline-primary\"}>Login</Button>\n                            </LinkContainer>\n                            <LinkContainer to={\"/sign_up\"}>\n                                {/*<Button variant={\"primary\"} onClick={()=>this.props.onReq(\"sign_up\")}>Sign-up</Button>*/}\n                                <Button variant={\"primary\"}>Sign-up</Button>\n                            </LinkContainer>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            );\n        }\n        else{\n            header = (\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky={\"top\"}>\n                    {/*<Container fluid={true}>*/}\n                        <LinkContainer to={\"/\"}>\n                            <Navbar.Brand>WinDrop</Navbar.Brand>\n                        </LinkContainer>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav defaultActiveKey={\"home\"} className=\"mr-auto\">\n                                <LinkContainer to={\"/\"}>\n                                    {/*<Nav.Link eventKey={\"home\"} onSelect={()=>this.props.onReq(\"home\")}>Home</Nav.Link>*/}\n                                    <Nav.Link eventKey={\"home\"} href={\"/\"}>Home</Nav.Link>\n                                </LinkContainer>\n                                <LinkContainer to={\"/faq\"}>\n                                    {/*<Nav.Link eventKey={\"faq\"} onSelect={()=>this.props.onReq(\"faq\")}>FAQs</Nav.Link>*/}\n                                    <Nav.Link eventKey={\"faq\"} href={\"/faq\"}>FAQs</Nav.Link>\n                                </LinkContainer>\n                                <LinkContainer to={\"/about\"}>\n                                    {/*<Nav.Link eventKey={\"about\"} onSelect={()=>this.props.onReq(\"about\")}>About</Nav.Link>*/}\n                                    <Nav.Link eventKey={\"about\"}>About</Nav.Link>\n                                </LinkContainer>\n                            </Nav>\n                            <Nav fill={true} className={\"justify-content-end\"}>\n                                <NavDropdown eventKey={1} id=\"basic-nav-dropdown\" drop={\"down\"}\n                                title= {this.props.login_data.login_credentials.username}\n                                >\n\n                                    <NavDropdown.Item eventKey={1.1} href=\"#profile\">Profile</NavDropdown.Item>\n                                    <NavDropdown.Item eventKey={1.2} href={\"/\"} onClick={()=>this.props.onReq(\"false\",null)}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                            </Nav>\n                        </Navbar.Collapse>\n                    {/*</Container>*/}\n                </Navbar>\n            );\n        }\n        return (\n            header\n        );\n    }\n}\n\nexport { Header };","import React, { useState, useEffect, Component } from \"react\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                Home of Windrop\n            </div>\n        );\n    }\n}\n\nexport {Home};","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass About extends Component {\n    render() {\n        return (\n            <div>\n                About of Windrop\n            </div>\n        );\n    }\n}\n\nexport {About};","import React, { useState, useEffect, Component } from \"react\";\nimport \"./dashboard.css\";\n\nclass FAQ extends Component {\n    render() {\n        return (\n            <div>\n                FAQ for Windrop\n            </div>\n        );\n    }\n}\n\nexport {FAQ};\n\n\n\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Login.css\"\nimport {Button, Form} from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {Redirect} from \"react-router\";\n\nlet APP_CONFIG = require(\"../config/app_config\");\nconst ENDPOINT = APP_CONFIG.BACKEND_ENDPOINT;\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            error: null,\n            username: \"\",\n            password: \"\",\n            name: \"\"\n        };\n\n        // this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(ENDPOINT+\"start\")\n            .then(res => res.json())\n            .then((res) => {\n                this.setState({isLoaded: true,});\n            })\n            .catch((err)=>{\n                this.setState({isLoaded: true, error: err});\n                console.log(err);\n            });\n    }\n\n    handleSubmit() {\n        // <validate_user user={this.state} handleValid={(n)=>{this.setState({isLoaded: true, name: n})}/>\n        fetch(ENDPOINT+\"users/find\", {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\n        })\n            .then(res => res.json())\n            .then(\n                res => {\n                    if(res === null){\n                        console.log(\"Username password do not match\");\n                        alert(\"username password do not match\");\n                    }\n                    else if (res.name !== \"\") {\n                        console.log(res);\n                        this.props.onReq(true, {username: this.state.username, name: res.name});\n                        this.setState({name: res.name});\n                    }\n                })\n            .catch(\n                err => {\n                    console.log(err);\n                });\n    }\n\n    handleChange(event){\n        let fieldName = event.target.name;\n        let fieldVal = event.target.value;\n        this.setState({[fieldName]: fieldVal});\n    }\n\n    render() {\n        let { isLoaded, error, username, password, name} = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else if(name !== \"\"){\n            return <Redirect to={\"/dashboard\"}/>;\n        }\n        else {\n            {/*TODO: isLoaded error handling*/}\n            return (\n                <Form className={\"form-global\"}>\n                    <h3>Login</h3>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type={\"text\"} name={\"username\"}\n                                      onChange={this.handleChange.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" name={\"password\"}\n                                      onChange={this.handleChange.bind(this)}/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"Remember me\"/>\n                    </Form.Group>\n                    {/*<LinkContainer to={\"/\"}>*/}\n\n                    <Button variant=\"primary\" onClick={() => this.handleSubmit()}>\n                        Submit\n                    </Button>\n                    {/*</LinkContainer>*/}\n                    {/*<AfterSubmit name={this.state.name}/>*/}\n                </Form>\n            );\n        }\n    }\n}\n\n\nexport {Login};","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Button, Col, Container, Form} from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {Redirect} from \"react-router\";\n\nlet APP_CONFIG = require(\"../config/app_config\");\nconst ENDPOINT = APP_CONFIG.BACKEND_ENDPOINT;\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            isSubmitted: false,\n            error: null,\n            username: \"\",\n            password: \"\",\n            name: \"\",\n            email: \"\"\n        };\n    }\n\n    componentDidMount() {\n        fetch(ENDPOINT+\"start\")\n            .then(res => res.json())\n            .then((res) => {\n                this.setState({isLoaded: true,});\n            })\n            .catch((err)=>{\n                this.setState({isLoaded: true, error: err});\n                console.log(err);\n            });\n    }\n\n    handleSubmit() {\n        fetch(ENDPOINT+\"users/add\", {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({username: this.state.username, password: this.state.password, email: this.state.email, name: this.state.name})\n        })\n            .then(res => res.json())\n            .then(\n                res => {\n                    {/*TODO: username already exists condition*/}\n                    if(res === null){\n                        console.log(\"Username password do not match\");\n                        alert(\"username password do not match\");\n                    }\n                    else{\n                        console.log(res);\n                        this.props.onReq(true, {username: this.state.username, name: this.state.name});\n                        this.setState({isSubmitted: true});\n                    }\n                })\n            .catch(\n                err => {\n                    console.log(err);\n                }\n            );\n    }\n\n    handleChange(event){\n        let fieldName = event.target.name;\n        let fieldVal = event.target.value;\n        this.setState({[fieldName]: fieldVal});\n    }\n\n    render() {\n        let { isLoaded, isSubmitted, error, username, password, email} = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        }\n        else if(isSubmitted){\n            return <Redirect to={\"/dashboard\"}/>;\n        }\n        else {\n            return (\n                <Container className={\"justify-content-center mb-5 mt-5\"}>\n                    <Form onSubmit={ () => this.handleSubmit()}>\n                        <Form.Group>\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control name={\"username\"} placeholder=\"For eg, brain_freeze, v-house\" onChange={this.handleChange.bind(this)}/>\n                        </Form.Group>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control name={\"email\"} type=\"email\" placeholder=\"Enter email\" onChange={this.handleChange.bind(this)}/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control name={\"password\"} type=\"password\" placeholder=\"Password\" onChange={this.handleChange.bind(this)}/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group controlId=\"formGridFirstName\">\n                            <Form.Label>First name</Form.Label>\n                            <Form.Control name={\"name\"} onChange={this.handleChange.bind(this)}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formGridSecondName\">\n                            <Form.Label>Second name</Form.Label>\n                            <Form.Control/>\n                        </Form.Group>\n\n                        {/*<LinkContainer to={\"/\"}>*/}\n                            <Button variant=\"primary\" onClick={() => this.handleSubmit()}>\n                                Submit\n                            </Button>\n                        {/*</LinkContainer>*/}\n                    </Form>\n                </Container>\n            );\n        }\n    }\n}\n\nexport {SignUp};","import React, { useState, useEffect, Component } from \"react\";\nimport \"./dashboard.css\";\nimport socketIOClient from \"socket.io-client\";\nimport {Button, Col, Container, FormFile, ListGroup, Row} from \"react-bootstrap\";\nimport {ArrowUpSquareFill} from \"react-bootstrap-icons\";\n\nconst MAXIMUM_MESSAGE_SIZE = 65535;\nconst END_OF_FILE_MESSAGE = 'EOF';\nconst {arrayBufferWithMime,arrayBufferMimeDecouple} = require('arraybuffer-mime');\nconst arrayBufferConcat = require('arraybuffer-concat')\n\nlet APP_CONFIG = require(\"../config/app_config\");\nconst ENDPOINT = APP_CONFIG.BACKEND_ENDPOINT;\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            configuration : {\n                'iceServers': [{\n                    'urls': 'stun:stun.l.google.com:19302'\n                }]\n            },\n            room:null,\n            chunks : [],\n            clientList: [],\n            isInitiator: null,\n            clientId: null,\n            dest_id: null,\n            dataChannel: null,\n            connections : {},\n            datachannels : {},\n            online: null,\n            memberList: [],\n            file:null,\n            socket:null,\n            downloadList:null,\n            usernames:{},\n        };\n    }\n\n    renderClients (){\n        var onlineUsers = ((this.state.clientList.length === 0) ? 0 : (this.state.clientList.length - 1) );\n\n        this.setState({online: onlineUsers});\n\n        var html = [];\n        if(this.state.clientList.length === 1)\n        {\n            this.setState({memberList: html});\n            return;\n        }\n\n        for(var i=0; i<this.state.clientList.length; i++)\n        {\n            var element = this.state.clientList[i];\n            if(element === this.state.clientId) continue;\n            html.push(element);\n            this.setState({memberList: html});\n\n        }\n    }\n\n    allConnect (){\n        this.setState({connections: {}});\n        this.setState({datachannels: {}});\n        for(let i = 0;i<this.state.clientList.length;i++){\n            var element = this.state.clientList[i];\n            if(element === this.state.clientId) continue;\n            this.sendConnect(element);\n        }\n    }\n\n    async sendConnect (id){\n        this.setState({dest_id: id});\n        this.setState({isInitiator: true});\n        this.state.socket.emit('sendConnect', this.state.dest_id, this.state.clientId, this.state.room, this.props.login_data.login_credentials.username);\n        return true;\n    }\n\n    t(){\n        console.log(Date.now());\n    }\n\n    createPeer(id){\n\n        //var connect = document.getElementById('connect');\n        //connect.style.display = 'block';\n\n        let tmp = this.state.connections;\n        let tmp1 = this.state.datachannels;\n        tmp[id] = new RTCPeerConnection(this.state.configuration);\n\n        tmp[id].onicecandidate = (event) => {\n            if (event.candidate) {\n                this.sendMessage({\n                    type: 'candidate',\n                    label: event.candidate.sdpMLineIndex,\n                    id: event.candidate.sdpMid,\n                    candidate: event.candidate.candidate\n                },id);\n            } else {\n            }\n        };\n        this.setState({connections:tmp});\n\n        if (this.state.isInitiator) {\n            tmp1[id] = this.state.connections[id].createDataChannel('files');\n            tmp1[id].binaryType = 'arraybuffer';\n            this.setState({datachannels: tmp1});\n            this.onDataChannelCreated(id);\n\n            this.state.connections[id].createOffer().then((offer) => {\n                return this.state.connections[id].setLocalDescription(offer);\n            })\n                .then(() => {\n                    this.sendMessage(this.state.connections[id].localDescription, id);\n                })\n                .catch(this.logError);\n\n        } else {\n            tmp[id].ondatachannel = (event) => {\n                tmp1[id] = event.channel;\n                tmp1[id].binaryType = 'arraybuffer';\n                this.setState({datachannels: tmp1});\n                this.onDataChannelCreated(id);\n            };\n            this.setState({connections:tmp});\n        }\n    }\n\n    sendMessage (message, id) {\n        this.state.socket.emit('message', message, id, this.state.clientId);\n    }\n\n    onDataChannelCreated (id){\n\n        let channel = this.state.datachannels;\n        channel[id].onopen = () => {\n        };\n\n        channel[id].onclose = () => {\n            // currentState.sendBtn = false;\n        }\n\n        channel[id].onmessage = async (event) => {\n            const { data } = event;\n            try {\n                if (data !== END_OF_FILE_MESSAGE) {\n                    var tmp = this.state.chunks;\n                    tmp.push(data);\n                    this.setState({chunks:tmp});\n                } else {\n                    let abWithMime = this.state.chunks.reduce((acc, arrayBuffer) => {\n                        const tmp = new Uint8Array(acc.byteLength + arrayBuffer.byteLength);\n                        tmp.set(new Uint8Array(acc), 0);\n                        tmp.set(new Uint8Array(arrayBuffer), acc.byteLength);\n                        return tmp;\n                    }, new Uint8Array());\n                    const {mime, arrayBuffer} = arrayBufferMimeDecouple(abWithMime)\n                    const blob = new Blob([arrayBuffer], {type : mime});\n                    this.render1(blob, \"download\");\n                    //channel.close();\n                }\n            } catch (err) {\n            }\n        };\n        this.setState({datachannels: channel});\n    };\n\n    logError (err) {\n        if (!err) return;\n        if (typeof err === 'string') {\n            console.warn(err);\n        } else {\n            console.warn(err.toString(), err);\n        }\n    }\n\n    render1 (blob, fileName){\n        var html;\n        const url = window.URL.createObjectURL(blob);\n        if(url)\n        {\n            html = <li><small><a href={url} download={fileName}>Incoming file</a></small></li> ;\n        }\n        else\n        {\n            html = <li>No files available here</li>;\n        }\n        this.setState({downloadList: html});\n        this.setState({chunks: []});\n    }\n\n    signalingMessageCallback (message, id) {\n        if (message.type === 'offer') {\n            this.state.connections[id].setRemoteDescription(new RTCSessionDescription(message), () => {},\n                this.logError);\n            this.state.connections[id].createAnswer().then((answer) => {\n                this.onLocalSessionCreated(answer,id);\n            }).catch(this.logError);\n        } else if (message.type === 'answer') {\n            this.state.connections[id].setRemoteDescription(new RTCSessionDescription(message), () => {},\n                this.logError);\n        } else if (message.type === 'candidate') {\n            this.state.connections[id].addIceCandidate(new RTCIceCandidate({\n                candidate: message.candidate,\n                sdpMLineIndex: message.label,\n                sdpMid: message.id\n            }));\n        }\n    }\n\n    onLocalSessionCreated (desc,id) {\n        this.state.connections[id].setLocalDescription(desc).then(() => {\n            this.sendMessage(this.state.connections[id].localDescription, id);\n        }).catch(this.logError);\n    }\n\n    async sendFile(ev){\n        let id = ev.target.value;\n        // for(var i=0; i<this.state.clientList.length; i++){\n        //     if(this.state.clientId === this.state.clientList[i]) continue;\n        //     else{\n        //         id = this.state.clientList[i];\n        //     }\n        // }\n        // var id = element.getAttribute(\"id\");\n        // var fileInput = document.getElementById('file')\n        var file = this.state.file;\n\n        if(file){\n            let arrayBuffer = await file.arrayBuffer();\n            let mime = file.type;\n            let abWithMime = arrayBufferWithMime(arrayBuffer, mime)\n            let dataChannel = this.state.datachannels[id];\n\n            for (let i = 0; i < abWithMime.byteLength; i += MAXIMUM_MESSAGE_SIZE) {\n                dataChannel.send(abWithMime.slice(i, i + MAXIMUM_MESSAGE_SIZE));\n            }\n            dataChannel.send(END_OF_FILE_MESSAGE);\n        }\n    }\n\n    arrayBufferWithMime(arrayBuffer, mime) {\n        const len = mime.length\n        const uint8 = new Uint8Array(len + 1)\n\n        uint8[0] = len\n\n        for (var i = 0; i < len; i++) {\n            var n = mime[i].charCodeAt(0)\n            uint8[i+1] = n\n        }\n\n        const ab = arrayBufferConcat(uint8, arrayBuffer)\n\n        return ab\n    }\n\n    arrayBufferMimeDecouple(arrayBufferWithMime) {\n        const uint8 = new Uint8Array(arrayBufferWithMime)\n        var mime = ''\n        const len = uint8[0]\n\n        for (var i = 0; i < len; i++) {\n            var char = uint8[i+1]\n\n            mime += String.fromCharCode(char)\n        }\n\n        var arrayBuffer = uint8.slice(len+1).buffer\n\n        return {\n            mime: mime,\n            arrayBuffer: arrayBuffer\n        }\n    }\n\n    componentDidMount() {\n        if (!this.state.room) {\n            this.state.room = window.location.hash = \"1\";\n        }\n        this.state.socket = socketIOClient.connect(ENDPOINT, {reconnect: true});\n\n        this.state.socket.emit('create or join', this.state.room);\n\n        this.state.socket.on('Display clients', (clientsInRoom, isAllConnect) => {\n            this.setState({clientList: clientsInRoom});\n            this.renderClients();\n            if(isAllConnect) this.allConnect();\n        });\n\n        this.state.socket.on('ready', (dest_Id, username) => {\n\n            let users = this.state.usernames;\n            users[dest_Id] = username;\n            this.setState({usernames: users});\n\n            this.t();\n            this.createPeer(dest_Id);\n            this.t();\n        });\n\n        this.state.socket.on('reset', () => {\n            window.location.reload();\n        });\n\n        this.state.socket.on('sendConnect', (dest_Id, username) => {\n\n            let users = this.state.usernames;\n            users[dest_Id] = username;\n            this.setState({usernames: users});\n\n            this.setState({dest_id: dest_Id});\n            this.setState({isInitiator: false});\n            this.t();\n            this.createPeer(this.state.dest_id);\n            this.t();\n            this.state.socket.emit('ready', this.state.dest_id, this.state.clientId, this.props.login_data.login_credentials.username);\n            return true;\n        });\n\n        this.state.socket.on('socketid', (id) => {\n            this.setState({clientId: id});\n        });\n\n        this.state.socket.on('log', (array) => {\n        });\n\n        this.state.socket.on('message', (message, id) => {\n            this.signalingMessageCallback(message, id);\n        });\n    }\n\n    addFile(event){\n        this.setState({file: event.target.files[0]});\n    }\n\n    tmp = (event) => {\n    }\n    createUserList() {\n        let html = [];\n        for(var i=0; i<this.state.memberList.length; i++){\n            html.push(\n                <ListGroup.Item>\n                    {this.state.usernames[this.state.memberList[i]]}<Button value={this.state.memberList[i]} onClick={(ev) => this.sendFile(ev)}>Send file</Button>\n                    {/*<Row className={\"p-2\"}>*/}\n                    {/*    <Col>{this.state.memberList[i]}</Col>*/}\n                    {/*    /!*<Col><Form.File onChange={(e) => {this.addFile(e)}} type={\"file\"} className={\"custom-file-label\"} label={this.state.memberList[i]} custom/></Col>*!/*/}\n                    {/*    <Col className={\"justify-content-end\"}><Button value={this.state.memberList[i]} onClick={(ev) => this.sendFile(ev.target.value)}/></Col>*/}\n                    {/*</Row>*/}\n                </ListGroup.Item>\n            );\n        }\n        return html;\n    }\n\n    render() {\n        let userList = this.createUserList();\n        return(\n            <Container className={\"justify-content-center mb-5 mt-5\"}>\n                <div>\n                    Users online: {this.state.online}\n                </div>\n                <div>\n                    {/*<FormFile onChange={(e) => {this.addFile(e)}} type={\"file\"} className={\"custom-file-label\"} label={\"Select file\"} custom/>*/}\n                    <FormFile onChange={(e) => {this.addFile(e)}} type={\"file\"} data-browse={\"Select file\"}/>\n                    <ul id=\"downloadList\">{this.state.downloadList}</ul>\n                </div>\n                <ListGroup>\n                    {userList}\n                </ListGroup>\n            </Container>\n        );\n    }\n}\n\nexport {Dashboard};\n\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Home} from \"./Home\";\nimport {About} from \"./About\";\nimport {FAQ} from \"./FAQ\";\nimport {Login} from \"./Login\";\nimport {SignUp} from \"./SignUp\";\nimport {Dashboard} from \"./Dashboard\";\n\nclass Middle extends Component{\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         middle_content: this.props.middle_content\n    //     };\n    // }\n\n    render() {\n        let middle;\n        if(this.props.middle_content === \"home\"){\n            middle = <Home/>;\n        }\n        else if(this.props.middle_content === \"about\"){\n            middle = <About/>;\n        }\n        else if(this.props.middle_content === \"faq\"){\n            middle = <FAQ/>;\n        }\n        else if(this.props.middle_content === \"login\"){\n            middle = <Login onReq={this.props.onReq}/>;\n        }\n        else if(this.props.middle_content === \"sign_up\"){\n            middle = <SignUp onReq={this.props.onReq}/>;\n        }\n        else if(this.props.middle_content === \"dashboard\"){\n            middle = <Dashboard login_data={this.props.login_data}/>;\n        }\n        return(\n            middle\n        );\n    }\n}\n\nexport {Middle};","import React, { Component } from 'react';\nimport {\n    Switch,\n    Route,\n    useParams,\n    useRouteMatch\n} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Header } from \"./components/Header\";\nimport {Middle} from \"./components/Middle\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            logged_in: false,\n            login_credentials : {}\n            // middle_content: \"home\"\n        };\n        this.handleReq = this.handleReq.bind(this);\n    }\n\n    handleReq(ls, lc) {\n        this.setState({logged_in: ls, login_credentials: lc});\n        // this.render();\n    }\n\n    render() {\n        return(\n            <div>\n                {/*<Header logged_in={this.state.logged_in}/>*/}\n                {/*<Middle middle_content={\"home\"}/>*/}\n                <Switch>\n                    <Route exact path={\"/\"}>\n                        {/*<Header logged_in={this.state.logged_in} onReq={(mc) => this.handleReq(this.state.logged_in,mc)}/>*/}\n                        <Header login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                        <Middle middle_content={\"home\"}/>\n                    </Route>\n                    <Route path={\"/about\"}>\n                        <Header login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                        <Middle middle_content={\"about\"}/>\n                    </Route>\n                    <Route path={\"/faq\"}>\n                        <Header login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                        <Middle middle_content={\"faq\"}/>\n                    </Route>\n                    <Route path={\"/login\"}>\n                        <Header login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                        <Middle middle_content={\"login\"} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                    </Route>\n                    <Route path={\"/sign_up\"}>\n                        <Header login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                        <Middle middle_content={\"sign_up\"} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                    </Route>\n                    <Route path={\"/dashboard\"}>\n                        <Header login_data={this.state} onReq={(ls, lc) => this.handleReq(ls, lc)}/>\n                        <Middle middle_content={\"dashboard\"} login_data={this.state}/>\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport { App };","import React, {Component} from 'react';\n\nclass Tmp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            error: null,\n        };\n    }\n\n    componentDidMount() {\n        console.log('I was triggered during componentDidMount')\n        fetch(\"https://window-drop.azurewebsites.net/\")\n            .then(res => res.json())\n            .then((res) => {\n                this.setState({isLoaded: true,});\n                console.log(res);\n            })\n            .catch((err)=>{\n                this.setState({isLoaded: true, error: err});\n                console.log('fuck')\n                console.log(err);\n            });\n    }\n\n    render(){\n        return(\n            <h1>Check console</h1>\n        );\n    }\n}\n\nexport { Tmp };","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {Route, Router} from \"react-router\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport { App } from \"./App\";\nimport {Tmp} from \"./Tmp\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n            {/*<Tmp/>*/}\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n","module.exports = {\n    BACKEND_ENDPOINT: \"https://window-drop.azurewebsites.net/\",\n}"],"sourceRoot":""}