[{"/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/index.js":"1","/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/App.js":"2","/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/components/Middle.js":"3","/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/components/Header.js":"4","/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/components/Home.js":"5","/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/components/About.js":"6","/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/components/FAQ.js":"7","/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/components/Login.js":"8","/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/components/SignUp.js":"9","/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/Tmp.js":"10"},{"size":412,"mtime":1617374163919,"results":"11","hashOfConfig":"12"},{"size":2321,"mtime":1617544333908,"results":"13","hashOfConfig":"12"},{"size":1066,"mtime":1617544158019,"results":"14","hashOfConfig":"12"},{"size":5185,"mtime":1617367244692,"results":"15","hashOfConfig":"12"},{"size":253,"mtime":1617285898559,"results":"16","hashOfConfig":"12"},{"size":256,"mtime":1617285898559,"results":"17","hashOfConfig":"12"},{"size":251,"mtime":1617285898559,"results":"18","hashOfConfig":"12"},{"size":4221,"mtime":1617543628884,"results":"19","hashOfConfig":"12"},{"size":4499,"mtime":1617543893439,"results":"20","hashOfConfig":"12"},{"size":790,"mtime":1617373991136,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"cg2v87",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/index.js",["47"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {Route, Router} from \"react-router\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport { App } from \"./App\";\nimport {Tmp} from \"./Tmp\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n            {/*<Tmp/>*/}\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n",["48","49"],"/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/App.js",["50","51"],"/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/components/Middle.js",[],"/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/components/Header.js",["52","53"],"import React, { Component } from \"react\";\nimport {Button, Container, Image, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\nimport {LinkContainer} from 'react-router-bootstrap';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./headers.css\";\n\nclass Header extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         logged_in: props.logged_in\n    //     };\n    // }\n\n    render() {\n        let header;\n        if (!this.props.login_data.logged_in) {\n            header = (\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky={\"top\"}>\n                    <LinkContainer to={\"/\"}>\n                        <Navbar.Brand>WinDrop</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <LinkContainer to={\"/\"}>\n                                {/*<Nav.Link eventKey={\"home\"} onSelect={()=>this.props.onReq(\"home\")}>Home</Nav.Link>*/}\n                                <Nav.Link eventKey={\"home\"} href={\"/\"}>Home</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to={\"/faq\"}>\n                                {/*<Nav.Link eventKey={\"faq\"} onSelect={()=>this.props.onReq(\"faq\")}>FAQs</Nav.Link>*/}\n                                <Nav.Link eventKey={\"faq\"} href={\"/faq\"}>FAQs</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to={\"/about\"}>\n                                {/*<Nav.Link eventKey={\"about\"} onSelect={()=>this.props.onReq(\"about\")}>About</Nav.Link>*/}\n                                <Nav.Link eventKey={\"about\"}>About</Nav.Link>\n                            </LinkContainer>\n                        </Nav>\n                        <Nav fill={true} className=\"justify-content-end\">\n                            <LinkContainer to={\"/login\"}>\n                                {/*<Button variant={\"outline-primary\"} onClick={()=>this.props.onReq(\"login\")}>Login</Button>*/}\n                                <Button variant={\"outline-primary\"}>Login</Button>\n                            </LinkContainer>\n                            <LinkContainer to={\"/sign_up\"}>\n                                {/*<Button variant={\"primary\"} onClick={()=>this.props.onReq(\"sign_up\")}>Sign-up</Button>*/}\n                                <Button variant={\"primary\"}>Sign-up</Button>\n                            </LinkContainer>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            );\n        }\n        else{\n            header = (\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky={\"top\"}>\n                    {/*<Container fluid={true}>*/}\n                        <LinkContainer to={\"/\"}>\n                            <Navbar.Brand>WinDrop</Navbar.Brand>\n                        </LinkContainer>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav defaultActiveKey={\"home\"} className=\"mr-auto\">\n                                <LinkContainer to={\"/\"}>\n                                    {/*<Nav.Link eventKey={\"home\"} onSelect={()=>this.props.onReq(\"home\")}>Home</Nav.Link>*/}\n                                    <Nav.Link eventKey={\"home\"} href={\"/\"}>Home</Nav.Link>\n                                </LinkContainer>\n                                <LinkContainer to={\"/faq\"}>\n                                    {/*<Nav.Link eventKey={\"faq\"} onSelect={()=>this.props.onReq(\"faq\")}>FAQs</Nav.Link>*/}\n                                    <Nav.Link eventKey={\"faq\"} href={\"/faq\"}>FAQs</Nav.Link>\n                                </LinkContainer>\n                                <LinkContainer to={\"/about\"}>\n                                    {/*<Nav.Link eventKey={\"about\"} onSelect={()=>this.props.onReq(\"about\")}>About</Nav.Link>*/}\n                                    <Nav.Link eventKey={\"about\"}>About</Nav.Link>\n                                </LinkContainer>\n                            </Nav>\n                            <Nav fill={true} className={\"justify-content-end\"}>\n                                <NavDropdown eventKey={1} id=\"basic-nav-dropdown\" drop={\"down\"}\n                                title= {this.props.login_data.login_credentials.username}\n                                >\n\n                                    <NavDropdown.Item eventKey={1.1} href=\"#profile\">Profile</NavDropdown.Item>\n                                    <NavDropdown.Item eventKey={1.2} href={\"/\"} onClick={()=>this.props.onReq(\"false\",null)}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                            </Nav>\n                        </Navbar.Collapse>\n                    {/*</Container>*/}\n                </Navbar>\n            );\n        }\n        return (\n            header\n        );\n    }\n}\n\nexport { Header };","/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/components/Home.js",[],"/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/components/About.js",[],"/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/components/FAQ.js",[],"/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/components/Login.js",["54","55","56","57"],"import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Login.css\"\nimport {Button, Form} from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {Redirect} from \"react-router\";\n// import {validate_user} from \"../services/user_services\";\n\n// function AfterSubmit(props) {\n//     let ret = (\n//         <Form.Group controlId={\"incorrectPassword\"}>\n//             <Form.Text>\n//                 Incorrect username or password\n//             </Form.Text>\n//         </Form.Group>\n//     );\n//     if(props.name !== \"\"){\n//         ret = (\n//             <Redirect to={\"/\"}/>\n//         );\n//     }\n//     return(\n//         ret\n//     );\n// }\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            error: null,\n            username: \"\",\n            password: \"\",\n            name: \"\"\n        };\n\n        // this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:3080/\")\n            .then(res => res.json())\n            .then((res) => {\n                this.setState({isLoaded: true,});\n            })\n            .catch((err)=>{\n                this.setState({isLoaded: true, error: err});\n                console.log(err);\n            });\n    }\n\n    handleSubmit() {\n        // <validate_user user={this.state} handleValid={(n)=>{this.setState({isLoaded: true, name: n})}/>\n        fetch(\"http://localhost:3080/users/find\", {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\n        })\n            .then(res => res.json())\n            .then(\n                res => {\n                    if(res === null){\n                        console.log(\"Username password do not match\");\n                        alert(\"username password do not match\");\n                    }\n                    else if (res.name !== \"\") {\n                        console.log(res);\n                        this.props.onReq(true, {username: this.state.username, name: res.name});\n                        this.setState({name: res.name});\n                    }\n                })\n            .catch(\n                err => {\n                    console.log(err);\n                });\n    }\n\n    handleChange(event){\n        let fieldName = event.target.name;\n        let fieldVal = event.target.value;\n        this.setState({[fieldName]: fieldVal});\n    }\n\n    render() {\n        let { isLoaded, error, username, password, name} = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else if(name !== \"\"){\n            return <Redirect to={\"/\"}/>;\n        }\n        else {\n            {/*TODO: isLoaded error handling*/}\n            return (\n                <Form className={\"form-global\"}>\n                    <h3>Login</h3>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type={\"text\"} name={\"username\"}\n                                      onChange={this.handleChange.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" name={\"password\"}\n                                      onChange={this.handleChange.bind(this)}/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"Remember me\"/>\n                    </Form.Group>\n                    {/*<LinkContainer to={\"/\"}>*/}\n\n                    <Button variant=\"primary\" onClick={() => this.handleSubmit()}>\n                        Submit\n                    </Button>\n                    {/*</LinkContainer>*/}\n                    {/*<AfterSubmit name={this.state.name}/>*/}\n                </Form>\n            );\n        }\n    }\n}\n\n\nexport {Login};","/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/components/SignUp.js",["58","59","60","61","62"],"import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Button, Col, Container, Form} from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {Redirect} from \"react-router\";\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            isSubmitted: false,\n            error: null,\n            username: \"\",\n            password: \"\",\n            name: \"\",\n            email: \"\"\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:3080/\")\n            .then(res => res.json())\n            .then((res) => {\n                this.setState({isLoaded: true,});\n            })\n            .catch((err)=>{\n                this.setState({isLoaded: true, error: err});\n                console.log(err);\n            });\n    }\n\n    handleSubmit() {\n        fetch(\"http://localhost:3080/users/add\", {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({username: this.state.username, password: this.state.password, email: this.state.email, name: this.state.name})\n        })\n            .then(res => res.json())\n            .then(\n                res => {\n                    {/*TODO: username already exists condition*/}\n                    if(res === null){\n                        console.log(\"Username password do not match\");\n                        alert(\"username password do not match\");\n                    }\n                    else{\n                        console.log(res);\n                        this.props.onReq(true, {username: this.state.username, name: this.state.name});\n                        this.setState({isSubmitted: true});\n                    }\n                })\n            .catch(\n                err => {\n                    console.log(err);\n                }\n            );\n    }\n\n    handleChange(event){\n        let fieldName = event.target.name;\n        let fieldVal = event.target.value;\n        this.setState({[fieldName]: fieldVal});\n    }\n\n    render() {\n        let { isLoaded, isSubmitted, error, username, password, email} = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        }\n        else if(isSubmitted){\n            return <Redirect to={\"/\"}/>;\n        }\n        else {\n            return (\n                <Container className={\"justify-content-center mb-5 mt-5\"}>\n                    <Form onSubmit={ () => this.handleSubmit()}>\n                        <Form.Group>\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control name={\"username\"} placeholder=\"For eg, brain_freeze, v-house\" onChange={this.handleChange.bind(this)}/>\n                        </Form.Group>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control name={\"email\"} type=\"email\" placeholder=\"Enter email\" onChange={this.handleChange.bind(this)}/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control name={\"password\"} type=\"password\" placeholder=\"Password\" onChange={this.handleChange.bind(this)}/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group controlId=\"formGridFirstName\">\n                            <Form.Label>First name</Form.Label>\n                            <Form.Control name={\"name\"} onChange={this.handleChange.bind(this)}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formGridSecondName\">\n                            <Form.Label>Second name</Form.Label>\n                            <Form.Control/>\n                        </Form.Group>\n\n                        {/*<LinkContainer to={\"/\"}>*/}\n                            <Button variant=\"primary\" onClick={() => this.handleSubmit()}>\n                                Submit\n                            </Button>\n                        {/*</LinkContainer>*/}\n                    </Form>\n                </Container>\n            );\n        }\n    }\n}\n\nexport {SignUp};","/home/srihari/iiitb/sem_8/spe/final_project/window-drop/react_frontend/src/Tmp.js",[],{"ruleId":"63","severity":1,"message":"64","line":7,"column":9,"nodeType":"65","messageId":"66","endLine":7,"endColumn":12},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"63","severity":1,"message":"71","line":5,"column":5,"nodeType":"65","messageId":"66","endLine":5,"endColumn":14},{"ruleId":"63","severity":1,"message":"72","line":6,"column":5,"nodeType":"65","messageId":"66","endLine":6,"endColumn":18},{"ruleId":"63","severity":1,"message":"73","line":2,"column":17,"nodeType":"65","messageId":"66","endLine":2,"endColumn":26},{"ruleId":"63","severity":1,"message":"74","line":2,"column":28,"nodeType":"65","messageId":"66","endLine":2,"endColumn":33},{"ruleId":"63","severity":1,"message":"75","line":5,"column":9,"nodeType":"65","messageId":"66","endLine":5,"endColumn":22},{"ruleId":"63","severity":1,"message":"76","line":86,"column":32,"nodeType":"65","messageId":"66","endLine":86,"endColumn":40},{"ruleId":"63","severity":1,"message":"77","line":86,"column":42,"nodeType":"65","messageId":"66","endLine":86,"endColumn":50},{"ruleId":"78","severity":1,"message":"79","line":95,"column":13,"nodeType":"80","messageId":"81","endLine":95,"endColumn":48},{"ruleId":"63","severity":1,"message":"75","line":4,"column":9,"nodeType":"65","messageId":"66","endLine":4,"endColumn":22},{"ruleId":"78","severity":1,"message":"79","line":42,"column":21,"nodeType":"80","messageId":"81","endLine":42,"endColumn":66},{"ruleId":"63","severity":1,"message":"76","line":67,"column":45,"nodeType":"65","messageId":"66","endLine":67,"endColumn":53},{"ruleId":"63","severity":1,"message":"77","line":67,"column":55,"nodeType":"65","messageId":"66","endLine":67,"endColumn":63},{"ruleId":"63","severity":1,"message":"82","line":67,"column":65,"nodeType":"65","messageId":"66","endLine":67,"endColumn":70},"no-unused-vars","'Tmp' is defined but never used.","Identifier","unusedVar","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'useParams' is defined but never used.","'useRouteMatch' is defined but never used.","'Container' is defined but never used.","'Image' is defined but never used.","'LinkContainer' is defined but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'email' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]