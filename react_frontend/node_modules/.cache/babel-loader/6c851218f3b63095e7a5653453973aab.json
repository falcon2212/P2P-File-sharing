{"ast":null,"code":"var _jsxFileName = \"/home/falcon2212/college/sem8/SPE/final-project/window-drop/react_frontend/src/components/Login.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Login.css\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet APP_CONFIG = require(\"../config/app_config\");\n\nconst ENDPOINT = APP_CONFIG.BACKEND_ENDPOINT;\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      error: null,\n      username: \"\",\n      password: \"\",\n      name: \"\"\n    }; // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(ENDPOINT + \"start\").then(res => res.json()).then(res => {\n      this.setState({\n        isLoaded: true\n      });\n    }).catch(err => {\n      this.setState({\n        isLoaded: true,\n        error: err\n      });\n      console.log(err);\n    });\n  }\n\n  handleSubmit() {\n    // <validate_user user={this.state} handleValid={(n)=>{this.setState({isLoaded: true, name: n})}/>\n    fetch(ENDPOINT + \"users/find\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      })\n    }).then(res => res.json()).then(res => {\n      if (res === null) {\n        console.log(\"Username password do not match\");\n        alert(\"username password do not match\");\n      } else if (res.name !== \"\") {\n        console.log(res);\n        this.props.onReq(true, {\n          username: this.state.username,\n          name: res.name\n        });\n        this.setState({\n          name: res.name\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleChange(event) {\n    let fieldName = event.target.name;\n    let fieldVal = event.target.value;\n    this.setState({\n      [fieldName]: fieldVal\n    });\n  }\n\n  render() {\n    let {\n      isLoaded,\n      error,\n      username,\n      password,\n      name\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }, this);\n    } else if (name !== \"\") {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/room_select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 20\n      }, this);\n    } else {\n      {\n        /*TODO: isLoaded error handling*/\n      }\n      return /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form-global\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"username\",\n            onChange: this.handleChange.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            name: \"password\",\n            onChange: this.handleChange.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicCheckbox\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => this.handleSubmit(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport { Login };","map":{"version":3,"sources":["/home/falcon2212/college/sem8/SPE/final-project/window-drop/react_frontend/src/components/Login.js"],"names":["React","Component","Button","Form","LinkContainer","Redirect","APP_CONFIG","require","ENDPOINT","BACKEND_ENDPOINT","Login","constructor","props","state","isLoaded","error","username","password","name","componentDidMount","fetch","then","res","json","setState","catch","err","console","log","handleSubmit","method","headers","body","JSON","stringify","alert","onReq","handleChange","event","fieldName","target","fieldVal","value","render","message","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Login.css\"\nimport {Button, Form} from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {Redirect} from \"react-router\";\n\nlet APP_CONFIG = require(\"../config/app_config\");\nconst ENDPOINT = APP_CONFIG.BACKEND_ENDPOINT;\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            error: null,\n            username: \"\",\n            password: \"\",\n            name: \"\"\n        };\n\n        // this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(ENDPOINT+\"start\")\n            .then(res => res.json())\n            .then((res) => {\n                this.setState({isLoaded: true,});\n            })\n            .catch((err)=>{\n                this.setState({isLoaded: true, error: err});\n                console.log(err);\n            });\n    }\n\n    handleSubmit() {\n        // <validate_user user={this.state} handleValid={(n)=>{this.setState({isLoaded: true, name: n})}/>\n        fetch(ENDPOINT+\"users/find\", {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\n        })\n            .then(res => res.json())\n            .then(\n                res => {\n                    if(res === null){\n                        console.log(\"Username password do not match\");\n                        alert(\"username password do not match\");\n                    }\n                    else if (res.name !== \"\") {\n                        console.log(res);\n                        this.props.onReq(true, {username: this.state.username, name: res.name});\n                        this.setState({name: res.name});\n                    }\n                })\n            .catch(\n                err => {\n                    console.log(err);\n                });\n    }\n\n    handleChange(event){\n        let fieldName = event.target.name;\n        let fieldVal = event.target.value;\n        this.setState({[fieldName]: fieldVal});\n    }\n\n    render() {\n        let { isLoaded, error, username, password, name} = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else if(name !== \"\"){\n            return <Redirect to={\"/room_select\"}/>;\n        }\n        else {\n            {/*TODO: isLoaded error handling*/}\n            return (\n                <Form className={\"form-global\"}>\n                    <h3>Login</h3>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type={\"text\"} name={\"username\"}\n                                      onChange={this.handleChange.bind(this)}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" name={\"password\"}\n                                      onChange={this.handleChange.bind(this)}/>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"Remember me\"/>\n                    </Form.Group>\n                    {/*<LinkContainer to={\"/\"}>*/}\n\n                    <Button variant=\"primary\" onClick={() => this.handleSubmit()}>\n                        Submit\n                    </Button>\n                    {/*</LinkContainer>*/}\n                    {/*<AfterSubmit name={this.state.name}/>*/}\n                </Form>\n            );\n        }\n    }\n}\n\n\nexport {Login};"]},"metadata":{},"sourceType":"module"}