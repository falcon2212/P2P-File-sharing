{"ast":null,"code":"var _jsxFileName = \"/home/falcon2212/college/sem8/SPE/final-project/window-drop/react_frontend/src/components/SignUp.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Col, Container, Form } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet APP_CONFIG = require(\"../config/app_config\");\n\nconst ENDPOINT = APP_CONFIG.BACKEND_ENDPOINT;\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      isSubmitted: false,\n      error: null,\n      username: \"\",\n      password: \"\",\n      name: \"\",\n      email: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(ENDPOINT + \"start\").then(res => res.json()).then(res => {\n      this.setState({\n        isLoaded: true\n      });\n    }).catch(err => {\n      this.setState({\n        isLoaded: true,\n        error: err\n      });\n      console.log(err);\n    });\n  }\n\n  handleSubmit() {\n    fetch(ENDPOINT + \"users/add\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n        email: this.state.email,\n        name: this.state.name\n      })\n    }).then(res => res.json()).then(res => {\n      {\n        /*TODO: username already exists condition*/\n      }\n\n      if (res === null) {\n        console.log(\"Username password do not match\");\n        alert(\"username password do not match\");\n      } else {\n        console.log(res);\n        this.props.onReq(true, {\n          username: this.state.username,\n          name: this.state.name\n        });\n        this.setState({\n          isSubmitted: true\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleChange(event) {\n    let fieldName = event.target.name;\n    let fieldVal = event.target.value;\n    this.setState({\n      [fieldName]: fieldVal\n    });\n  }\n\n  render() {\n    console.log(ENDPOINT);\n    let {\n      isLoaded,\n      isSubmitted,\n      error,\n      username,\n      password,\n      email\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 28\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 28\n      }, this);\n    } else if (isSubmitted) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 28\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        className: \"justify-content-center mb-5 mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: () => this.handleSubmit(),\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"username\",\n              placeholder: \"For eg, brain_freeze, v-house\",\n              onChange: this.handleChange.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGridEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"email\",\n                type: \"email\",\n                placeholder: \"Enter email\",\n                onChange: this.handleChange.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGridPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"password\",\n                type: \"password\",\n                placeholder: \"Password\",\n                onChange: this.handleChange.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formGridFirstName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"First name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"name\",\n              onChange: this.handleChange.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formGridSecondName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Second name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => this.handleSubmit(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this);\n    }\n  }\n\n}\n\nexport { SignUp };","map":{"version":3,"sources":["/home/falcon2212/college/sem8/SPE/final-project/window-drop/react_frontend/src/components/SignUp.js"],"names":["React","Component","Button","Col","Container","Form","LinkContainer","Redirect","APP_CONFIG","require","ENDPOINT","BACKEND_ENDPOINT","SignUp","constructor","props","state","isLoaded","isSubmitted","error","username","password","name","email","componentDidMount","fetch","then","res","json","setState","catch","err","console","log","handleSubmit","method","headers","body","JSON","stringify","alert","onReq","handleChange","event","fieldName","target","fieldVal","value","render","message","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Button, Col, Container, Form} from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {Redirect} from \"react-router\";\n\nlet APP_CONFIG = require(\"../config/app_config\");\nconst ENDPOINT = APP_CONFIG.BACKEND_ENDPOINT;\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            isSubmitted: false,\n            error: null,\n            username: \"\",\n            password: \"\",\n            name: \"\",\n            email: \"\"\n        };\n    }\n\n    componentDidMount() {\n        fetch(ENDPOINT+\"start\")\n        .then(res => res.json())\n        .then((res) => {\n            this.setState({isLoaded: true,});\n        })\n        .catch((err)=>{\n            this.setState({isLoaded: true, error: err});\n            console.log(err);\n        });\n    }\n    \n    handleSubmit() {\n        fetch(ENDPOINT+\"users/add\", {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({username: this.state.username, password: this.state.password, email: this.state.email, name: this.state.name})\n        })\n        .then(res => res.json())\n        .then(\n            res => {\n                {/*TODO: username already exists condition*/}\n                if(res === null){\n                    console.log(\"Username password do not match\");\n                    alert(\"username password do not match\");\n                }\n                else{\n                    console.log(res);\n                    this.props.onReq(true, {username: this.state.username, name: this.state.name});\n                    this.setState({isSubmitted: true});\n                }\n            })\n            .catch(\n                err => {\n                    console.log(err);\n                }\n                );\n            }\n            \n            handleChange(event){\n                let fieldName = event.target.name;\n                let fieldVal = event.target.value;\n                this.setState({[fieldName]: fieldVal});\n            }\n            \n            render() {\n                console.log(ENDPOINT);\n                let { isLoaded, isSubmitted, error, username, password, email} = this.state;\n                if (error) {\n                    return <div>Error: {error.message}</div>;\n                } else if (!isLoaded) {\n                    return <div>Loading...</div>;\n                }\n                else if(isSubmitted){\n                    return <Redirect to={\"/dashboard\"}/>;\n                }\n                else {\n                    return (\n                        <Container className={\"justify-content-center mb-5 mt-5\"}>\n                            <Form onSubmit={ () => this.handleSubmit()}>\n                        <Form.Group>\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control name={\"username\"} placeholder=\"For eg, brain_freeze, v-house\" onChange={this.handleChange.bind(this)}/>\n                        </Form.Group>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control name={\"email\"} type=\"email\" placeholder=\"Enter email\" onChange={this.handleChange.bind(this)}/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control name={\"password\"} type=\"password\" placeholder=\"Password\" onChange={this.handleChange.bind(this)}/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group controlId=\"formGridFirstName\">\n                            <Form.Label>First name</Form.Label>\n                            <Form.Control name={\"name\"} onChange={this.handleChange.bind(this)}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formGridSecondName\">\n                            <Form.Label>Second name</Form.Label>\n                            <Form.Control/>\n                        </Form.Group>\n\n                        {/*<LinkContainer to={\"/\"}>*/}\n                            <Button variant=\"primary\" onClick={() => this.handleSubmit()}>\n                                Submit\n                            </Button>\n                        {/*</LinkContainer>*/}\n                    </Form>\n                </Container>\n            );\n        }\n    }\n}\n\nexport {SignUp};"]},"metadata":{},"sourceType":"module"}