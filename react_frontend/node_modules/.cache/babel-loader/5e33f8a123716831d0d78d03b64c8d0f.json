{"ast":null,"code":"(function (root) {\n  'use strict';\n\n  function isValidArray(x) {\n    return /Int8Array|Int16Array|Int32Array|Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Float32Array|Float64Array|ArrayBuffer/gi.test(Object.prototype.toString.call(x));\n  }\n\n  function arrayBufferConcat()\n  /* arraybuffers */\n  {\n    var arrays = [].slice.call(arguments);\n\n    if (arrays.length <= 0 || !isValidArray(arrays[0])) {\n      return new Uint8Array(0).buffer;\n    }\n\n    var arrayBuffer = arrays.reduce(function (cbuf, buf, i) {\n      if (i === 0) return cbuf;\n      if (!isValidArray(buf)) return cbuf;\n      var tmp = new Uint8Array(cbuf.byteLength + buf.byteLength);\n      tmp.set(new Uint8Array(cbuf), 0);\n      tmp.set(new Uint8Array(buf), cbuf.byteLength);\n      return tmp.buffer;\n    }, arrays[0]);\n    return arrayBuffer;\n  }\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = arrayBufferConcat;\n    }\n\n    exports.arrayBufferConcat = arrayBufferConcat;\n  } else if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return arrayBufferConcat;\n    });\n  } else {\n    root.arrayBufferConcat = arrayBufferConcat;\n  }\n})(this);","map":{"version":3,"sources":["/home/falcon2212/college/sem8/SPE/final-project/window-drop/react_frontend/node_modules/arraybuffer-concat/arraybuffer-concat.js"],"names":["root","isValidArray","x","test","Object","prototype","toString","call","arrayBufferConcat","arrays","slice","arguments","length","Uint8Array","buffer","arrayBuffer","reduce","cbuf","buf","i","tmp","byteLength","set","exports","module","define","amd"],"mappings":"AAAA,CAAC,UAASA,IAAT,EAAe;AACd;;AAEA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,WAAO,+HAA+HC,IAA/H,CAAoIC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,CAA/B,CAApI,CAAP;AACD;;AAED,WAASM,iBAAT;AAA2B;AAAoB;AAC7C,QAAIC,MAAM,GAAG,GAAGC,KAAH,CAASH,IAAT,CAAcI,SAAd,CAAb;;AAEA,QAAIF,MAAM,CAACG,MAAP,IAAiB,CAAjB,IAAsB,CAACX,YAAY,CAACQ,MAAM,CAAC,CAAD,CAAP,CAAvC,EAAoD;AAClD,aAAO,IAAII,UAAJ,CAAe,CAAf,EAAkBC,MAAzB;AACD;;AAED,QAAIC,WAAW,GAAGN,MAAM,CAACO,MAAP,CAAc,UAASC,IAAT,EAAeC,GAAf,EAAoBC,CAApB,EAAuB;AACrD,UAAIA,CAAC,KAAK,CAAV,EAAa,OAAOF,IAAP;AACb,UAAI,CAAChB,YAAY,CAACiB,GAAD,CAAjB,EAAwB,OAAOD,IAAP;AAExB,UAAIG,GAAG,GAAG,IAAIP,UAAJ,CAAeI,IAAI,CAACI,UAAL,GAAkBH,GAAG,CAACG,UAArC,CAAV;AACAD,MAAAA,GAAG,CAACE,GAAJ,CAAQ,IAAIT,UAAJ,CAAeI,IAAf,CAAR,EAA8B,CAA9B;AACAG,MAAAA,GAAG,CAACE,GAAJ,CAAQ,IAAIT,UAAJ,CAAeK,GAAf,CAAR,EAA6BD,IAAI,CAACI,UAAlC;AAEA,aAAOD,GAAG,CAACN,MAAX;AACD,KATiB,EASfL,MAAM,CAAC,CAAD,CATS,CAAlB;AAWA,WAAOM,WAAP;AACD;;AAED,MAAI,OAAOQ,OAAP,KAAmB,WAAvB,EAAoC;AAClC,QAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACD,OAA5C,EAAqD;AACnDA,MAAAA,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiBf,iBAA3B;AACD;;AACDe,IAAAA,OAAO,CAACf,iBAAR,GAA4BA,iBAA5B;AACD,GALD,MAKO,IAAI,OAAOiB,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AACrDD,IAAAA,MAAM,CAAC,EAAD,EAAK,YAAW;AACpB,aAAOjB,iBAAP;AACD,KAFK,CAAN;AAGD,GAJM,MAIA;AACLR,IAAAA,IAAI,CAACQ,iBAAL,GAAyBA,iBAAzB;AACD;AACF,CAxCD,EAwCG,IAxCH","sourcesContent":["(function(root) {\n  'use strict'\n\n  function isValidArray(x) {\n    return /Int8Array|Int16Array|Int32Array|Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Float32Array|Float64Array|ArrayBuffer/gi.test(Object.prototype.toString.call(x))\n  }\n\n  function arrayBufferConcat(/* arraybuffers */) {\n    var arrays = [].slice.call(arguments)\n\n    if (arrays.length <= 0 || !isValidArray(arrays[0])) {\n      return new Uint8Array(0).buffer\n    }\n\n    var arrayBuffer = arrays.reduce(function(cbuf, buf, i) {\n      if (i === 0) return cbuf\n      if (!isValidArray(buf)) return cbuf\n\n      var tmp = new Uint8Array(cbuf.byteLength + buf.byteLength)\n      tmp.set(new Uint8Array(cbuf), 0)\n      tmp.set(new Uint8Array(buf), cbuf.byteLength)\n\n      return tmp.buffer\n    }, arrays[0])\n\n    return arrayBuffer\n  }\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = arrayBufferConcat\n    }\n    exports.arrayBufferConcat = arrayBufferConcat\n  } else if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return arrayBufferConcat\n    })\n  } else {\n    root.arrayBufferConcat = arrayBufferConcat\n  }\n})(this)\n"]},"metadata":{},"sourceType":"script"}